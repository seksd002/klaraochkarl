@page "/admin"

@inject KlarakarlServices service
<div class="container mycontainer ">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Förnamn</th>
                    <th>Efternamn</th>
                    <th>Email</th>
                    <th>Registrerad</th>
                    <th>Ta bort person</th>
                </tr>
            </thead>
            <tbody>
                @if (Persons.Any())
                {
                    @foreach (var product in Persons)
                    {
                        <tr @onclick="(() => SetPersonForUpdate(product))">
                            <td>@product.Name</td>
                            <td>@product.Email</td>
                            <td>@product.Rwsps.ToString()</td>
                            <td><button class="btn btn-danger" @onclick="(() => DeletePerson(product))">Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>Hittade ingen person</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">
            <div class="p-3 mb-3 bg-primary text-white text-center">Lägg till person</div>
            <EditForm Model="@NewPerson">
                <div class="form-group">
                    <label for="Name">Namn</label>
                    <input type="text" id="surname" class="form-control" @bind-value="@NewPerson.Name" />
                </div>
               
                <div class="form-group">
                    <label for="quantity">Email</label>
                    <input type="email" id="email" class="form-control" @bind="@NewPerson.Email" />
                </div>
               @* <div class="form-group">
                    <label for="Description">Registrerad</label>
                    <input type="checkbox" id="Description" class="form-control" @bind="@NewPerson.Rwsps" />
                </div>*@
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewPerson"> Lägg till person</button>
                </div>
            </EditForm>
        </div>
        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center"> Ange nya uppgifter</div>
            <EditForm Model="@UpdatePerson">
                <div class="form-group">
                    <label for="Name">Namn</label>
                    <input type="text" id="surname" class="form-control" @bind-value="@UpdatePerson.Name" />
                </div>
                
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" class="form-control" @bind="@UpdatePerson.Email" />
                </div>
              @*  <div class="form-group">
                    <label for="Registred">Registrerad</label>
                    <input type="checkbox" id="Description" class="form-control" @bind="@UpdatePerson.Registred" />
                </div>*@
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdatePersonData"> Uppdatera person</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code {
    List<Person> Persons = new List<Person>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshPersons();
    }
    private async Task RefreshPersons()
    {
        //Persons = await service.GetPersonAsync();
    }
    public Person NewPerson { get; set; } = new Person();
    private async Task AddNewPerson()
    {
        //await service.AddPersonAsync(NewPerson);
        NewPerson = new Person();
        await RefreshPersons();
    }
    Person UpdatePerson = new Person();
    private void SetPersonForUpdate(Person person)
    {
        UpdatePerson = person;
    }
    private async Task UpdatePersonData()
    {
        //await service.UpdatePersonAsync(UpdatePerson);
        await RefreshPersons();
    }
    private async Task DeletePerson(Person person)
    {
        //await service.DeletePersonAsync(person);
        await RefreshPersons();
    }
}
